/*
 * uart.c
 *
 *  Created on: Dec 22, 2024
 *      Author: michael
 */

#include "uart.h"

#define GPIOAEN		(1U << 0)		// GPIOA clock enable bit in AHB1ENR register
#define UART2EN		(1U << 17)	// UART2 enable in APB1ENR register

// Function to initialize UART2
void uart2_tx_init(void)
{
	/****** [1] Configure UART2 Pins on Port A, PA2 (Tx) and PA3 (Rx) ******/
	/*  Enable clock access to GPIOA on AHB1 bus  */
	RCC->AHB1ENR |= GPIOAEN;

	/*  Set PA2 mode to alternate function mode. (Set bits 5 and 4 to 0b10) */
	GPIOA->MODER |= (1U << 5);
	GPIOA->MODER &= ~(1U << 4);

	/*  Set PA2 alternate function mode to UART_TX (AF07) . (Set bits 11, 10, 9, 8 to 0b0111, respectively.) */
	/*  Note this is in the alternate function low register, since we are working with PA2  */
	/*  Also note that the AF low register is AFR[0] and the AF high register is AFR[1]  */
	GPIOA->AFR[0] |= (1U << 8);
	GPIOA->AFR[0] |= (1U << 9);
	GPIOA->AFR[0] |= (1U << 10);
	GPIOA->AFR[0] &= ~(1U << 11);


	/****** [2] Configure UART  ******/
	/*  Enable clock access to UART2 on APB1*/
	RCC->APB1ENR | = UART2EN;

	/*  Configure baud rate  */
	/*  Configure data transfer direction  */
	/*  Enable UART module */


}


